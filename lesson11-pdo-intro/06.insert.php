<?php
// Include database config file => to get our PDO object 
require_once 'includes/db_connect.php';
$pdo->setAttribute(PDO::ATTR_DEFAULT_FETCH_MODE, PDO::FETCH_ASSOC);

// Assuming that we received these info from a user form
$postTitle = "Adobe Dreamweaver";
$postBody ="Adobe Dreamweaver is an integrated development environment. 
It can be used by pure designers who don't know how to write HTML 
or by developer who want to focus on writing their code.";
$postAuthor = "Stephanie Stephens";
$isPublished = 0;
$postCreatedDate = "2021-10-07";

// Below is just a copy of INSERT Statement Template Generated by MySQL (phpMyAdmin):
/*
INSERT INTO `posts`
(`post_id`, `title`, `body`, `author`, `published`, `released`) 
VALUES ('[value-1]','[value-2]','[value-3]','[value-4]','[value-5]','[value-6]')
*/
// Remember these two things:
// 1. The "post_id" field is auto incremented => we don't add it to our INSERT statement
// 2. All fields are required to have data (no field can be empty)

// Going with PDO steps using the prepared statement with named parameter
// :name_identifier

$sql = 'INSERT INTO posts (title, body, author, published, released) 
        VALUES (:title, :article, :author, :published, :released)';

// 1. Prepare:
$stmt = $pdo->prepare($sql);

// 2. Execute:
/*
To recap:
The execute() Method Return Values "true" on success or "false" on failure.
So we can use this feature just for now to check if the new row/record has been inserted or no
But in the next example, we should definitely use the rowCount() method
*/
$isInserted = $stmt->execute(
    [
    'title'=>$postTitle,
    'article' => $postBody ,
    'author' => $postAuthor ,
    'published'=> $isPublished,
    'released'=> $postCreatedDate
]);

if ($isInserted) {
    echo "<br>A new post has been added!";
} else {
    echo "<br>Sorry Inserting a new post is failed!";
}
echo "<hr>";

// Or using ternary operator (to recap):
echo (($isInserted) ? "<br>A new post has been added!" : "<br>Sorry Inserting a new post is failed!");


// we will skip the HTML template => we can skip the closing php tag